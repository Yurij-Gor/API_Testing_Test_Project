{"name": "test_delete_user_by_another_user", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 400. Actual: 200", "trace": "self = <tests.test_user_delete.TestUserDelete object at 0x0000023AA7695370>\n\n    @allure.story(\"Attempt to delete a user by another user\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.testcase(\"TC-23\", \"http://test-case/TC-23\")\n    @allure.description(\"Negative test for deleting a user by another user\")\n    def test_delete_user_by_another_user(self):\n        # This test verifies the scenario when one user attempts to delete another userâ€™s account,\n        # which is an unacceptable security and policy action for most systems.\n    \n        # Register the first user\n        user1_data = self.prepare_registration_data()\n        response1 = MyRequests.post(\"/user/\", data=user1_data)\n        Assertions.assert_code_status(response1, 200)\n        user1_id = self.get_json_value(response1, \"id\")\n    \n        # Register the Second User\n        user2_data = self.prepare_registration_data()\n        response2 = MyRequests.post(\"/user/\", data=user2_data)\n        Assertions.assert_code_status(response2, 200)\n    \n        # Log in as a second user\n        login_data = {\n            'email': user2_data['email'],\n            'password': user2_data['password']\n        }\n        response_login = MyRequests.post(\"/user/login\", data=login_data)\n        Assertions.assert_code_status(response_login, 200)\n    \n        # Receive cookies and second user authorization token\n        auth_sid = self.get_cookie(response_login, \"auth_sid\")\n        token = self.get_header(response_login, \"x-csrf-token\")\n    \n        # Trying to delete the first user by authorizing under the second user\n        cookies = {\"auth_sid\": auth_sid}\n        headers = {\"x-csrf-token\": token}\n        response_delete = MyRequests.delete(f\"/user/{user1_id}\", cookies=cookies, headers=headers)\n    \n        # Verify that the server did not allow deletion and returned an error\n>       Assertions.assert_code_status(response_delete, 400)\n\ntests\\test_user_delete.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, expected_status_code = 400\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n        # Defining of a static method in a class. This method will be used to verify the status of the HTTP response.\n        # Method parametrs:\n        # response: the Response object received as a result of the HTTP request.\n        # expected_status_code: expected response code status (such as 200, 404, etc.).\n    \n>       assert response.status_code == expected_status_code, \\\n            f\"Unexpected status code! Expected: {expected_status_code}. Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 400. Actual: 200\n\nlib\\assertions.py:97: AssertionError"}, "description": "Negative test for deleting a user by another user", "steps": [{"name": "POSt request to url '/user/'", "status": "passed", "start": 1708617126580, "stop": 1708617128559}, {"name": "POSt request to url '/user/'", "status": "passed", "start": 1708617128559, "stop": 1708617131542}, {"name": "POSt request to url '/user/login'", "status": "passed", "start": 1708617131542, "stop": 1708617133189}, {"name": "DELETE request to URL '/user/92614'", "status": "passed", "start": 1708617133189, "stop": 1708617135477}], "start": 1708617126579, "stop": 1708617135477, "uuid": "ae9f8ce1-626c-4f73-b3f8-80d24bf4eea2", "historyId": "8f5bb038e7083b0e58d65296e4206bd6", "testCaseId": "8f5bb038e7083b0e58d65296e4206bd6", "fullName": "tests.test_user_delete.TestUserDelete#test_delete_user_by_another_user", "labels": [{"name": "epic", "value": "User Management"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "Attempt to delete a user by another user"}, {"name": "feature", "value": "User Deletion"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_delete"}, {"name": "subSuite", "value": "TestUserDelete"}, {"name": "host", "value": "DESKTOP-Q3QIDPA"}, {"name": "thread", "value": "15380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_delete"}], "links": [{"type": "tms", "url": "TC-23", "name": "http://test-case/TC-23"}]}